# Triggers Pipeline only on Master
trigger:
  branches:
    include:
    - master
    
  paths:
    # Changes to these files does not trigger a new build / release
    exclude:
    - README.md
    - LICENSE
    - azure-pipelines.yml

# Disables triggering Pipeline run at creation of every Pull Request
pr: none

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: Developer-Automation

steps:
- task: DockerCompose@0
  displayName: 'Build images'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerComposeFile: 'docker-compose.yml'
    action: 'Run a Docker Compose command'
    dockerComposeCommand: 'build'
    arguments: '--build-arg PAT=$(System.AccessToken)'

- task: ECRPushImage@1  
  displayName: 'Push api image to ECR'
  inputs:
    awsCredentials: 'DeveloperAutomation ECR'
    regionName: 'eu-west-1'
    imageSource: 'imagename'
    sourceImageName: 'cost-janitor-api'
    repositoryName: 'dfds.developerautomation-xavgy.cost-janitor'
    pushTag: 'cost-janitor-api-$(Build.BuildId)'
   
- task: ECRPushImage@1
  displayName: 'Push cost-janitor-event-consumer image to ECR'
  inputs:
    awsCredentials: 'DeveloperAutomation ECR'
    regionName: 'eu-west-1'
    imageSource: 'imagename'
    sourceImageName: 'cost-janitor-event-consumer'
    repositoryName: 'dfds.developerautomation-xavgy.cost-janitor'
    pushTag: 'cost-janitor-event-consumer-$(Build.BuildId)'
    
# Replace token values in yaml files with pipeline variables
- task: qetza.replacetokens.replacetokens-task.replacetokens@3
  displayName: 'Replace tokens in k8s manifests'
  inputs:
    rootDirectory: '$(Build.SourcesDirectory)/k8s/'
    targetFiles: '*.yaml'
    tokenPrefix: '#('
    tokenSuffix: ')'

# Apply Kubernetes manifests
- task: Kubernetes@1
  displayName: 'Apply k8s manifests'
  inputs:
    connectionType: Kubernetes Service Connection
    kubernetesServiceEndpoint: 'Kubernetes-Developer-Automation-Deploy'
    namespace: 'developerautomation-xavgy'
    command: apply
    arguments: '-f $(Build.SourcesDirectory)/k8s/'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'Write-Host "##vso[build.addbuildtag]capability_id=3982dbbb-9064-4f26-88f7-df7eeeafbd33"'
  displayName: 'add capability id buildtag'